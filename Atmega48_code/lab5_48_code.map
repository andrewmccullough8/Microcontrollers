Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                              lab5_48_code.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                              lab5_48_code.o (__itoa_ncheck)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

uart_tx_buf         0x28              uart_functions_m48.o
twi_state           0x1               twi_master.o
twi_buf             0x2               twi_master.o
lm73_wr_buf         0x2               lm73_functions.o
lm73_temp           0x2               lab5_48_code.o
lcd_string_local_temp
                    0x10              lab5_48_code.o
twi_bus_addr        0x1               twi_master.o
twi_msg_size        0x1               twi_master.o
lm73_rd_buf         0x2               lm73_functions.o
uart_rx_buf         0x28              uart_functions_m48.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
LOAD lab5_48_code.o
LOAD lm73_functions.o
LOAD twi_master.o
LOAD uart_functions_m48.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega48.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3e8
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000034       0xa2 twi_master.o
                0x00000000000000d6                . = ALIGN (0x2)
                0x00000000000000d6                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000d6        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000d6                __trampolines_end = .
 *(.progmem*)
                0x00000000000000d6                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000d6                __ctors_start = .
 *(.ctors)
                0x00000000000000d6                __ctors_end = .
                0x00000000000000d6                __dtors_start = .
 *(.dtors)
                0x00000000000000d6                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000d6        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
                0x00000000000000d6                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000d6        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000e2       0x10 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000e2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000f2        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
 *(.init9)
 *(.text)
 .text          0x00000000000000f6        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
                0x00000000000000f6                __vector_22
                0x00000000000000f6                __vector_1
                0x00000000000000f6                __vector_12
                0x00000000000000f6                __bad_interrupt
                0x00000000000000f6                __vector_6
                0x00000000000000f6                __vector_3
                0x00000000000000f6                __vector_23
                0x00000000000000f6                __vector_25
                0x00000000000000f6                __vector_11
                0x00000000000000f6                __vector_13
                0x00000000000000f6                __vector_17
                0x00000000000000f6                __vector_19
                0x00000000000000f6                __vector_7
                0x00000000000000f6                __vector_5
                0x00000000000000f6                __vector_4
                0x00000000000000f6                __vector_9
                0x00000000000000f6                __vector_2
                0x00000000000000f6                __vector_21
                0x00000000000000f6                __vector_15
                0x00000000000000f6                __vector_8
                0x00000000000000f6                __vector_14
                0x00000000000000f6                __vector_10
                0x00000000000000f6                __vector_16
                0x00000000000000f6                __vector_18
                0x00000000000000f6                __vector_20
 .text          0x00000000000000f8       0x40 lab5_48_code.o
                0x00000000000000f8                local_temp
 .text          0x0000000000000138        0x0 lm73_functions.o
 .text          0x0000000000000138      0x172 twi_master.o
                0x0000000000000138                __vector_24
                0x000000000000024c                twi_busy
                0x0000000000000254                twi_start_wr
                0x0000000000000276                twi_start_rd
                0x0000000000000298                init_twi
 .text          0x00000000000002aa       0xac uart_functions_m48.o
                0x00000000000002aa                uart_putc
                0x00000000000002c0                uart_puts
                0x00000000000002e6                uart_puts_p
                0x000000000000031a                uart_init
                0x000000000000033a                uart_getc
 .text          0x0000000000000356        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000356        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000356        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .text          0x0000000000000356        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .text          0x0000000000000356        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000356                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000356       0x28 lab5_48_code.o
                0x0000000000000356                main
 .text.libgcc.mul
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000037e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000000000000037e       0x14 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                0x000000000000037e                __itoa_ncheck
 .text.avr-libc
                0x0000000000000392       0x32 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                0x0000000000000392                __utoa_ncheck
                0x0000000000000394                __utoa_common
 .text.avr-libc
                0x00000000000003c4       0x20 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x00000000000003c4                strrev
                0x00000000000003e4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003e4        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x00000000000003e4                exit
                0x00000000000003e4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003e4        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000003e8                _etext = .

.data           0x0000000000800100        0x0 load address 0x00000000000003e8
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
 .data          0x0000000000800100        0x0 lab5_48_code.o
 .data          0x0000000000800100        0x0 lm73_functions.o
 .data          0x0000000000800100        0x0 twi_master.o
 .data          0x0000000000800100        0x0 uart_functions_m48.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100       0x6c
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
 .bss           0x0000000000800100        0x0 lab5_48_code.o
 .bss           0x0000000000800100        0x0 lm73_functions.o
 .bss           0x0000000000800100        0x1 twi_master.o
 .bss           0x0000000000800101        0x0 uart_functions_m48.o
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800101       0x12 lab5_48_code.o
                0x0000000000800101                lm73_temp
                0x0000000000800103                lcd_string_local_temp
 COMMON         0x0000000000800113        0x4 lm73_functions.o
                0x0000000000800113                lm73_wr_buf
                0x0000000000800115                lm73_rd_buf
 COMMON         0x0000000000800117        0x5 twi_master.o
                0x0000000000800117                twi_state
                0x0000000000800118                twi_buf
                0x000000000080011a                twi_bus_addr
                0x000000000080011b                twi_msg_size
 COMMON         0x000000000080011c       0x50 uart_functions_m48.o
                0x000000000080011c                uart_tx_buf
                0x0000000000800144                uart_rx_buf
                0x000000000080016c                PROVIDE (__bss_end, .)
                0x00000000000003e8                __data_load_start = LOADADDR (.data)
                0x00000000000003e8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080016c        0x0
                0x000000000080016c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080016c                PROVIDE (__noinit_end, .)
                0x000000000080016c                _end = .
                0x000000000080016c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x15c0
 *(.stab)
 .stab          0x0000000000000000      0x690 lab5_48_code.o
 .stab          0x0000000000000690      0x2dc lm73_functions.o
                                        0x4a4 (size before relaxing)
 .stab          0x000000000000096c      0x684 twi_master.o
                                        0x87c (size before relaxing)
 .stab          0x0000000000000ff0      0x5d0 uart_functions_m48.o
                                        0x7ec (size before relaxing)

.stabstr        0x0000000000000000     0x1039
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1039 lab5_48_code.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 lab5_48_code.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 lm73_functions.o
 .comment       0x0000000000000011       0x12 twi_master.o
 .comment       0x0000000000000011       0x12 uart_functions_m48.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lab5_48_code.elf elf32-avr)
LOAD linker stubs
